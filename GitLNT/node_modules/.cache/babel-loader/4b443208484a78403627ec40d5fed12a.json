{"ast":null,"code":"var _jsxFileName = \"/home/pragnesh/Smis/DemoExample/LNT/my-app/src/UserList.js\";\nimport React, { Component } from 'react';\nimport './Userlist.css';\nimport * as firebase from 'firebase';\nimport AddUserForm from './AddUserForm';\nlet newState = [];\nlet childKey;\nlet secondxyz;\nlet word;\nlet useridword;\nvar demoarray = []; // var base64Img = require('base64-img');\n\nclass UserList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDelete = (e, user) => {\n      // alert(\"We r On Delete\");\n      // console.log(\"mydemoarray :: \" , demoarray);\n      // let mykey = demoarray[0].mykeyy;\n      // console.log(\"MY FINAL KEYYY :: \", mykey);\n      let deleteUser = firebase.database().ref('/' + user.userkey);\n      deleteUser.remove();\n    };\n\n    this.handleEdit = (e, user) => {\n      console.log(\"We r Here On Edit\");\n      this.setState({\n        modalIsOpen: true,\n        currentObj: user\n      });\n    };\n\n    this.handleAdduser = () => {\n      this.setState({\n        redirect: true\n      });\n    };\n\n    this.state = {\n      redirect: false,\n      secondxyz: [],\n      newState: [],\n      demoarray: [],\n      userList: [],\n      currentObj: {}\n    };\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n  }\n\n  componentDidMount() {\n    let tableName = firebase.database().ref('/');\n    tableName.on('value', async _snapshot => {\n      if (_snapshot.val()) {\n        let secondxyz = _snapshot.val();\n\n        let UserArray = [];\n\n        for (let key in secondxyz) {\n          secondxyz[key].userkey = key;\n          UserArray.push(secondxyz[key]); // console.log(\"userListttt :: \", UserArray);\n        }\n\n        await this.setState({\n          secondxyz: UserArray\n        });\n      }\n    }); // this.loadUserList();\n    // const xyz = firebase.database().ref('/'); \n    // xyz.once('value', function(snapshot) {\n    //     snapshot.forEach(function(childSnapshot) {\n    //     childKey = childSnapshot.key;\n    //     console.log(\"CHILD KEY :: \" ,childKey);\n    //     demoarray.push ({\n    //         \"mykeyy\":childKey\n    //     });\n    //     });\n    //     console.log(\"demoarray :: \" , demoarray);\n    // });\n    // xyz.on('value',(snapshot)  => {\n    //     secondxyz = snapshot.val();\n    //     console.log(\"secondxyz :: \", secondxyz);\n    //     for (word in secondxyz){\n    //         newState.push({\n    //             email : secondxyz[word].email,\n    //             mobileno : secondxyz[word].mobileno,\n    //             name : secondxyz[word].name,\n    //             password : secondxyz[word].password\n    //         });\n    //     }\n    //     this.setState({\n    //         secondxyz: newState\n    //     });  \n    // })\n  } // async loadUserList(){\n  //     let tableName = firebase.database().ref('/');\n  //     tableName.on('value', async (_snapshot) => {\n  //         if(_snapshot.val()){\n  //             let userList=_snapshot.val();\n  //             let UserArray=[];\n  //             for (let key in userList){\n  //                 userList[key].userkey=key;\n  //                 UserArray.push(userList[key]);\n  //                 console.log(\"userListttt :: \", UserArray    );\n  //             }\n  //             await this.setState({\n  //                 userList: UserArray\n  //             }); \n  //         }\n  //     });\n  // }\n\n\n  handleUserUpdate() {\n    const _this$state$currentOb = this.state.currentObj,\n          email = _this$state$currentOb.email,\n          mobileno = _this$state$currentOb.mobileno,\n          name = _this$state$currentOb.name,\n          userkey = _this$state$currentOb.userkey;\n    let edit = {\n      name: name,\n      email: email,\n      mobileno: mobileno\n    };\n    let ref = firebase.database().ref('/' + userkey);\n    ref.update(edit);\n    this.setState({\n      modalIsOpen: false,\n      currentObj: {}\n    });\n  }\n\n  renderTableData() {\n    return this.state.secondxyz.map((word, index) => {\n      // return this.state.userList.map((word,index) => {\n      const email = word.email,\n            mobileno = word.mobileno,\n            name = word.name,\n            password = word.password;\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, email), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, mobileno), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, password), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: e => this.handleEdit(e, word),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Edit\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: e => this.handleDelete(e, word),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Delete\")));\n    });\n  }\n\n  renderTableHeader() {\n    let header = Object.keys(this.state.secondxyz[0]);\n    return header.map((key, index) => {\n      return React.createElement(\"th\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, key.toUpperCase());\n    });\n  }\n\n  renderEditModel() {\n    const currentObj = this.state.currentObj;\n    return React.createElement(Modal, {\n      isOpen: this.state.modalIsOpen,\n      onRequestClose: () => this.closeModal(),\n      style: customStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Update User\"), React.createElement(\"form\", {\n      className: \"projects fbca fbca--dircol fbca--flst\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inputrow fbca\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"inputrow__description\",\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      id: \"name\",\n      type: \"text\",\n      className: \"inputrow__field\",\n      name: \"name\",\n      value: currentObj.name,\n      onChange: e => this.handleInputChange('name', e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"inputrow fbca\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"inputrow__description\",\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      id: \"email\",\n      type: \"text\",\n      className: \"inputrow__field\",\n      name: \"email\",\n      value: currentObj.email,\n      onChange: e => this.handleInputChange('email', e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"inputrow fbca\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"inputrow__description\",\n      htmlFor: \"mobileno\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"Mobile No\"), React.createElement(\"input\", {\n      id: \"mobileno\",\n      type: \"number\",\n      className: \"inputrow__field\",\n      name: \"mobileno\",\n      value: currentObj.mobileno,\n      onChange: e => this.handleInputChange('mobileno', e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"btn-group-submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button\",\n      onClick: e => this.handleUserUpdate(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \" Save \"), React.createElement(\"button\", {\n      className: \"button\",\n      onClick: e => this.closeModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \" Cancel \")))));\n  }\n\n  render() {\n    const redirect = this.state.redirect;\n\n    if (redirect) {\n      // return <Lntframe />;\n      return React.createElement(AddUserForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, modalIsOpen ? this.renderEditModel() : null, React.createElement(\"table\", {\n      id: \"students\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \"EMAIL\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"Mobile NO\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"NAME\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"PASSWORD\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \"EDIT\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"DELETE\")), this.renderTableData())));\n  }\n\n}\n\nexport default UserList;","map":{"version":3,"sources":["/home/pragnesh/Smis/DemoExample/LNT/my-app/src/UserList.js"],"names":["React","Component","firebase","AddUserForm","newState","childKey","secondxyz","word","useridword","demoarray","UserList","constructor","props","handleDelete","e","user","deleteUser","database","ref","userkey","remove","handleEdit","console","log","setState","modalIsOpen","currentObj","handleAdduser","redirect","state","userList","bind","componentDidMount","tableName","on","_snapshot","val","UserArray","key","push","handleUserUpdate","email","mobileno","name","edit","update","renderTableData","map","index","password","renderTableHeader","header","Object","keys","toUpperCase","renderEditModel","closeModal","customStyles","handleInputChange","target","value","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,IAAIC,QAAQ,GAAG,EAAf;AACA,IAAIC,QAAJ;AACA,IAAIC,SAAJ;AACA,IAAIC,IAAJ;AACA,IAAIC,UAAJ;AAEA,IAAIC,SAAS,GAAG,EAAhB,C,CACA;;AAEA,MAAMC,QAAN,SAAuBV,KAAK,CAACC,SAA7B,CAAuC;AAEnCU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA2FnBC,YA3FmB,GA2FH,CAACC,CAAD,EAAGC,IAAH,KAAY;AACxB;AACA;AACA;AACA;AAEA,UAAIC,UAAU,GAAGd,QAAQ,CAACe,QAAT,GAAoBC,GAApB,CAAwB,MAAKH,IAAI,CAACI,OAAlC,CAAjB;AACAH,MAAAA,UAAU,CAACI,MAAX;AACH,KAnGkB;;AAAA,SAqGnBC,UArGmB,GAqGL,CAACP,CAAD,EAAGC,IAAH,KAAY;AAEtBO,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,WAAKC,QAAL,CAAc;AACVC,QAAAA,WAAW,EAAE,IADH;AAEVC,QAAAA,UAAU,EAACX;AAFD,OAAd;AAKH,KA7GkB;;AAAA,SA4JnBY,aA5JmB,GA4JH,MAAM;AAElB,WAAKH,QAAL,CAAc;AACVI,QAAAA,QAAQ,EAAE;AADA,OAAd;AAIH,KAlKkB;;AAEf,SAAKC,KAAL,GAAa;AACTD,MAAAA,QAAQ,EAAE,KADD;AAETtB,MAAAA,SAAS,EAAG,EAFH;AAGTF,MAAAA,QAAQ,EAAE,EAHD;AAITK,MAAAA,SAAS,EAAE,EAJF;AAKTqB,MAAAA,QAAQ,EAAC,EALA;AAMTJ,MAAAA,UAAU,EAAC;AANF,KAAb;AAUA,SAAKb,YAAL,GAAoB,KAAKA,YAAL,CAAkBkB,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKV,UAAL,GAAkB,KAAKA,UAAL,CAAgBU,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AAEDC,EAAAA,iBAAiB,GAAI;AACjB,QAAIC,SAAS,GAAG/B,QAAQ,CAACe,QAAT,GAAoBC,GAApB,CAAwB,GAAxB,CAAhB;AACAe,IAAAA,SAAS,CAACC,EAAV,CAAa,OAAb,EAAsB,MAAOC,SAAP,IAAqB;AACvC,UAAGA,SAAS,CAACC,GAAV,EAAH,EAAmB;AACf,YAAI9B,SAAS,GAAC6B,SAAS,CAACC,GAAV,EAAd;;AACA,YAAIC,SAAS,GAAC,EAAd;;AAEA,aAAK,IAAIC,GAAT,IAAgBhC,SAAhB,EAA0B;AACtBA,UAAAA,SAAS,CAACgC,GAAD,CAAT,CAAenB,OAAf,GAAuBmB,GAAvB;AACAD,UAAAA,SAAS,CAACE,IAAV,CAAejC,SAAS,CAACgC,GAAD,CAAxB,EAFsB,CAGtB;AACH;;AACD,cAAM,KAAKd,QAAL,CAAc;AAChBlB,UAAAA,SAAS,EAAE+B;AADK,SAAd,CAAN;AAGH;AACJ,KAdD,EAFiB,CAkBjB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGH,GAtEkC,CAuEnC;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA0BAG,EAAAA,gBAAgB,GAAE;AAAA,kCAE4B,KAAKX,KAAL,CAAWH,UAFvC;AAAA,UAENe,KAFM,yBAENA,KAFM;AAAA,UAECC,QAFD,yBAECA,QAFD;AAAA,UAEWC,IAFX,yBAEWA,IAFX;AAAA,UAEiBxB,OAFjB,yBAEiBA,OAFjB;AAGd,QAAIyB,IAAI,GAAE;AACRD,MAAAA,IAAI,EAACA,IADG;AAERF,MAAAA,KAAK,EAACA,KAFE;AAGRC,MAAAA,QAAQ,EAACA;AAHD,KAAV;AAKA,QAAIxB,GAAG,GAAGhB,QAAQ,CAACe,QAAT,GAAoBC,GAApB,CAAwB,MAAKC,OAA7B,CAAV;AACAD,IAAAA,GAAG,CAAC2B,MAAJ,CAAWD,IAAX;AACA,SAAKpB,QAAL,CAAc;AACVC,MAAAA,WAAW,EAAE,KADH;AAEVC,MAAAA,UAAU,EAAC;AAFD,KAAd;AAIH;;AAGDoB,EAAAA,eAAe,GAAG;AAEd,WAAO,KAAKjB,KAAL,CAAWvB,SAAX,CAAqByC,GAArB,CAAyB,CAACxC,IAAD,EAAMyC,KAAN,KAAgB;AAChD;AADgD,YAEpCP,KAFoC,GAEDlC,IAFC,CAEpCkC,KAFoC;AAAA,YAE7BC,QAF6B,GAEDnC,IAFC,CAE7BmC,QAF6B;AAAA,YAEnBC,IAFmB,GAEDpC,IAFC,CAEnBoC,IAFmB;AAAA,YAEbM,QAFa,GAED1C,IAFC,CAEb0C,QAFa;AAG5C,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKR,KAAL,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKC,QAAL,CAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKC,IAAL,CAHA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKM,QAAL,CAJA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAQ,QAAA,OAAO,EAAGnC,CAAD,IAAK,KAAKO,UAAL,CAAgBP,CAAhB,EAAkBP,IAAlB,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAJ,CALA,EAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAQ,QAAA,OAAO,EAAGO,CAAD,IAAK,KAAKD,YAAL,CAAkBC,CAAlB,EAAoBP,IAApB,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAJ,CANA,CADJ;AAUH,KAbM,CAAP;AAcF;;AAEF2C,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKxB,KAAL,CAAWvB,SAAX,CAAqB,CAArB,CAAZ,CAAb;AACA,WAAO6C,MAAM,CAACJ,GAAP,CAAW,CAACT,GAAD,EAAMU,KAAN,KAAgB;AAC/B,aAAO;AAAI,QAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiBV,GAAG,CAACgB,WAAJ,EAAjB,CAAP;AACF,KAFM,CAAP;AAGH;;AAYDC,EAAAA,eAAe,GAAE;AAAA,UACL7B,UADK,GACU,KAAKG,KADf,CACLH,UADK;AAEb,WAAO,oBAAC,KAAD;AACL,MAAA,MAAM,EAAE,KAAKG,KAAL,CAAWJ,WADd;AAEL,MAAA,cAAc,EAAE,MAAI,KAAK+B,UAAL,EAFf;AAGL,MAAA,KAAK,EAAEC,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANG,EAOH;AAAM,MAAA,SAAS,EAAC,uCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,uBAAjB;AAAyC,MAAA,OAAO,EAAC,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AACI,MAAA,EAAE,EAAC,MADP;AACc,MAAA,IAAI,EAAC,MADnB;AAC0B,MAAA,SAAS,EAAC,iBADpC;AACsD,MAAA,IAAI,EAAC,MAD3D;AAEI,MAAA,KAAK,EAAE/B,UAAU,CAACiB,IAFtB;AAGI,MAAA,QAAQ,EAAG7B,CAAD,IAAK,KAAK4C,iBAAL,CAAuB,MAAvB,EAA8B5C,CAAC,CAAC6C,MAAF,CAASC,KAAvC,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,EASI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,uBAAjB;AAAyC,MAAA,OAAO,EAAC,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AACI,MAAA,EAAE,EAAC,OADP;AACe,MAAA,IAAI,EAAC,MADpB;AAC2B,MAAA,SAAS,EAAC,iBADrC;AACuD,MAAA,IAAI,EAAC,OAD5D;AAEI,MAAA,KAAK,EAAElC,UAAU,CAACe,KAFtB;AAGI,MAAA,QAAQ,EAAG3B,CAAD,IAAK,KAAK4C,iBAAL,CAAuB,OAAvB,EAA+B5C,CAAC,CAAC6C,MAAF,CAASC,KAAxC,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CATJ,EAmBI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,uBAAjB;AAAyC,MAAA,OAAO,EAAC,UAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AACI,MAAA,EAAE,EAAC,UADP;AACkB,MAAA,IAAI,EAAC,QADvB;AACgC,MAAA,SAAS,EAAC,iBAD1C;AAC4D,MAAA,IAAI,EAAC,UADjE;AAEI,MAAA,KAAK,EAAElC,UAAU,CAACgB,QAFtB;AAGI,MAAA,QAAQ,EAAG5B,CAAD,IAAK,KAAK4C,iBAAL,CAAuB,UAAvB,EAAkC5C,CAAC,CAAC6C,MAAF,CAASC,KAA3C,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAnBJ,EA2BI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAG9C,CAAD,IAAK,KAAK0B,gBAAL,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAG1B,CAAD,IAAK,KAAK0C,UAAL,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CADJ,CA3BJ,CAPG,CAAP;AA0CH;;AAEDK,EAAAA,MAAM,GAAI;AAAA,UAEFjC,QAFE,GAEW,KAAKC,KAFhB,CAEFD,QAFE;;AAGV,QAAIA,QAAJ,EAAc;AAEV;AACA,aAAO,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAEH;;AAED,WAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKMH,WAAW,GAAG,KAAK8B,eAAL,EAAH,GAA2B,IAL5C,EAMI;AAAO,MAAA,EAAE,EAAC,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,CADJ,EAWK,KAAKT,eAAL,EAXL,CADJ,CANJ,CAFA;AA0BC;;AAxPkC;;AA2PvC,eAAepC,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Userlist.css';\nimport * as firebase from 'firebase';\nimport AddUserForm from './AddUserForm';\n\nlet newState = [];\nlet childKey ;\nlet secondxyz;\nlet word;\nlet useridword;\n\nvar demoarray = [];\n// var base64Img = require('base64-img');\n\nclass UserList extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            redirect: false,\n            secondxyz : [] ,\n            newState: [],\n            demoarray: [],\n            userList:[],\n            currentObj:{}\n            \n        }\n\n        this.handleDelete = this.handleDelete.bind(this);\n        this.handleEdit = this.handleEdit.bind(this);\n    }\n\n    componentDidMount () { \n        let tableName = firebase.database().ref('/');\n        tableName.on('value', async (_snapshot) => {\n            if(_snapshot.val()){\n                let secondxyz=_snapshot.val();\n                let UserArray=[];\n                \n                for (let key in secondxyz){\n                    secondxyz[key].userkey=key;\n                    UserArray.push(secondxyz[key]);\n                    // console.log(\"userListttt :: \", UserArray);\n                }\n                await this.setState({\n                    secondxyz: UserArray\n                }); \n            }\n        });\n\n        // this.loadUserList();\n        // const xyz = firebase.database().ref('/'); \n        // xyz.once('value', function(snapshot) {\n        //     snapshot.forEach(function(childSnapshot) {\n        //     childKey = childSnapshot.key;\n        //     console.log(\"CHILD KEY :: \" ,childKey);\n\n        //     demoarray.push ({\n        //         \"mykeyy\":childKey\n        //     });\n             \n        //     });\n        //     console.log(\"demoarray :: \" , demoarray);\n        // });\n        // xyz.on('value',(snapshot)  => {\n        //     secondxyz = snapshot.val();\n        //     console.log(\"secondxyz :: \", secondxyz);\n            \n        //     for (word in secondxyz){\n                \n        //         newState.push({\n        //             email : secondxyz[word].email,\n        //             mobileno : secondxyz[word].mobileno,\n        //             name : secondxyz[word].name,\n        //             password : secondxyz[word].password\n        //         });\n\n        //     }\n        //     this.setState({\n        //         secondxyz: newState\n        //     });  \n        // })\n        \n\n    }\n    // async loadUserList(){\n    //     let tableName = firebase.database().ref('/');\n    //     tableName.on('value', async (_snapshot) => {\n    //         if(_snapshot.val()){\n    //             let userList=_snapshot.val();\n    //             let UserArray=[];\n                \n    //             for (let key in userList){\n    //                 userList[key].userkey=key;\n    //                 UserArray.push(userList[key]);\n    //                 console.log(\"userListttt :: \", UserArray    );\n    //             }\n    //             await this.setState({\n    //                 userList: UserArray\n    //             }); \n    //         }\n    //     });\n    // }\n    \n\n    \n\n    handleDelete =  (e,user) => {\n        // alert(\"We r On Delete\");\n        // console.log(\"mydemoarray :: \" , demoarray);\n        // let mykey = demoarray[0].mykeyy;\n        // console.log(\"MY FINAL KEYYY :: \", mykey);\n\n        let deleteUser = firebase.database().ref('/'+ user.userkey);\n        deleteUser.remove();\n    }\n\n    handleEdit =  (e,user) => {\n       \n        console.log(\"We r Here On Edit\");\n        this.setState({\n            modalIsOpen: true,\n            currentObj:user\n        })\n      \n    }\n\n\n    handleUserUpdate(){\n        \n        const { email, mobileno, name, userkey} = this.state.currentObj ;\n        let edit ={\n          name:name,\n          email:email,\n          mobileno:mobileno\n        }\n        let ref = firebase.database().ref('/'+ userkey);\n        ref.update(edit);\n        this.setState({\n            modalIsOpen: false,\n            currentObj:{}\n        })\n    }\n    \n\n    renderTableData() {\n\n        return this.state.secondxyz.map((word,index) => {\n        // return this.state.userList.map((word,index) => {\n            const { email, mobileno, name, password} = word \n            return (\n                <tr >\n                <td>{email}</td>\n                <td>{mobileno}</td>\n                <td>{name}</td>\n                <td>{password}</td>\n                <td><button onClick={(e)=>this.handleEdit(e,word)}>Edit</button></td>\n                <td><button onClick={(e)=>this.handleDelete(e,word)}>Delete</button></td>\n                </tr>\n            )\n        });\n     }\n\n    renderTableHeader() {\n        let header = Object.keys(this.state.secondxyz[0])\n        return header.map((key, index) => {\n           return <th key={index}>{key.toUpperCase()}</th>\n        })\n    }\n\n    \n\n    handleAdduser = () => {\n\n        this.setState({\n            redirect: true\n        })\n\n    }\n\n    renderEditModel(){\n        const { currentObj } = this.state\n        return(<Modal\n          isOpen={this.state.modalIsOpen}\n          onRequestClose={()=>this.closeModal()}\n          style={customStyles}\n        >\n \n            <h2 >Update User</h2>\n            <form className=\"projects fbca fbca--dircol fbca--flst\">\n                <div className=\"inputrow fbca\">\n                    <label className=\"inputrow__description\" htmlFor=\"name\">Name</label>\n                    <input\n                        id=\"name\" type=\"text\" className=\"inputrow__field\" name=\"name\"\n                        value={currentObj.name}  \n                        onChange={(e)=>this.handleInputChange('name',e.target.value)}\n                    />\n                </div>\n                <div className=\"inputrow fbca\">\n                    <label className=\"inputrow__description\" htmlFor=\"email\">Email</label>\n                    <input\n                        id=\"email\" type=\"text\" className=\"inputrow__field\" name=\"email\" \n                        value={currentObj.email} \n                        onChange={(e)=>this.handleInputChange('email',e.target.value)} \n                    />\n                </div>\n\n                \n                <div className=\"inputrow fbca\">\n                    <label className=\"inputrow__description\" htmlFor=\"mobileno\">Mobile No</label>\n                    <input\n                        id=\"mobileno\" type=\"number\" className=\"inputrow__field\" name=\"mobileno\"\n                        value={currentObj.mobileno}\n                        onChange={(e)=>this.handleInputChange('mobileno',e.target.value)}\n                    />\n                </div>\n                <div className=\"btn-group-submit\">\n                    <div >\n                        <button className=\"button\" onClick={(e)=>this.handleUserUpdate()}> Save </button>\n                        <button className=\"button\" onClick={(e)=>this.closeModal()}> Cancel </button>\n                    </div>\n                </div>                \n            </form>\n        </Modal>);\n    }\n\n    render () {\n\n    const { redirect } = this.state;\n    if (redirect) {\n    \n        // return <Lntframe />;\n        return <AddUserForm />;\n    \n    }\n      \n    return (\n        \n    <div>\n        {/* <div>\n        <button className=\"button\" onClick={this.handleAdduser}>Add User</button>\n        </div> */}\n\n        { modalIsOpen ? this.renderEditModel() :null}\n        <table id='students'>\n            <tbody>\n                <tr>\n                    <th>EMAIL</th>\n                    <th>Mobile NO</th>\n                    <th>NAME</th>\n                    <th>PASSWORD</th>\n                    <th>EDIT</th>\n                    <th>DELETE</th>\n                    {/* <th>DATE</th> */}\n                </tr>\n                \n                {this.renderTableData()}\n            </tbody>\n        </table>\n        </div>\n    \n    );\n    }\n    }\n    \nexport default UserList;"]},"metadata":{},"sourceType":"module"}