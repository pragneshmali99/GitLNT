{"ast":null,"code":"var _jsxFileName = \"/home/pragnesh/Smis/DemoExample/LNT/my-app/src/UserList.js\";\nimport React, { Component } from 'react';\nimport './Userlist.css';\nimport * as firebase from 'firebase';\nimport AddUserForm from './AddUserForm';\nimport Modal from 'react-modal';\nlet newState = [];\nlet childKey;\nlet secondxyz;\nlet word;\nlet useridword;\nvar demoarray = []; // var base64Img = require('base64-img');\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\n\nclass UserList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDelete = (e, user) => {\n      let deleteUser = firebase.database().ref('/' + user.userkey);\n      deleteUser.remove();\n    };\n\n    this.handleAdduser = () => {\n      this.setState({\n        redirect: true\n      });\n    };\n\n    this.state = {\n      redirect: false,\n      userList: [],\n      modalIsOpen: false,\n      confirm: false,\n      currentObj: {}\n    };\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadUserList();\n  }\n\n  async loadUserList() {\n    let tableName = firebase.database().ref('/');\n    tableName.on('value', async _snapshot => {\n      if (_snapshot.val()) {\n        let userList = _snapshot.val();\n\n        let UserArray = [];\n\n        for (let key in userList) {\n          userList[key].userkey = key;\n          UserArray.push(userList[key]);\n        }\n\n        await this.setState({\n          userList: UserArray\n        });\n      }\n    });\n  }\n\n  handleEdit(e, user) {\n    this.setState({\n      modalIsOpen: true,\n      currentObj: user\n    });\n  }\n\n  handleUserUpdate() {\n    const _this$state$currentOb = this.state.currentObj,\n          email = _this$state$currentOb.email,\n          mobileno = _this$state$currentOb.mobileno,\n          name = _this$state$currentOb.name,\n          userkey = _this$state$currentOb.userkey;\n    let edit = {\n      name: name,\n      email: email,\n      mobileno: mobileno\n    };\n    let ref = firebase.database().ref('/' + userkey);\n    ref.update(edit);\n    this.setState({\n      modalIsOpen: false,\n      currentObj: {}\n    });\n  }\n\n  handleInputChange(field, value) {\n    let currentObj = this.state.currentObj;\n    currentObj[field] = value;\n    this.setState({\n      currentObj: currentObj\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      modalIsOpen: false,\n      currentObj: {}\n    });\n  }\n\n  renderTableData() {\n    return this.state.userList.map((word, index) => {\n      const email = word.email,\n            mobileno = word.mobileno,\n            name = word.name,\n            password = word.password;\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, email), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, mobileno), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, password), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: e => this.handleEdit(e, word),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Edit\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: e => this.handleDelete(e, word),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Delete\")));\n    });\n  }\n\n  openModal() {\n    this.setState({\n      modalIsOpen: true\n    });\n  }\n\n  confirmModel() {}\n\n  renderEditModel() {\n    const currentObj = this.state.currentObj;\n    return React.createElement(Modal, {\n      isOpen: this.state.modalIsOpen,\n      onRequestClose: () => this.closeModal(),\n      style: customStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Update User\"), React.createElement(\"form\", {\n      className: \"projects fbca fbca--dircol fbca--flst\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inputrow fbca\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"inputrow__description\",\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      id: \"name\",\n      type: \"text\",\n      className: \"inputrow__field\",\n      name: \"name\",\n      value: currentObj.name,\n      onChange: e => this.handleInputChange('name', e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"inputrow fbca\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"inputrow__description\",\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      id: \"email\",\n      type: \"text\",\n      className: \"inputrow__field\",\n      name: \"email\",\n      value: currentObj.email,\n      onChange: e => this.handleInputChange('email', e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"inputrow fbca\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"inputrow__description\",\n      htmlFor: \"mobileno\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Mobile No\"), React.createElement(\"input\", {\n      id: \"mobileno\",\n      type: \"number\",\n      className: \"inputrow__field\",\n      name: \"mobileno\",\n      value: currentObj.mobileno,\n      onChange: e => this.handleInputChange('mobileno', e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"btn-group-submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button\",\n      onClick: e => this.handleUserUpdate(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \" Save \"), React.createElement(\"button\", {\n      className: \"button\",\n      onClick: e => this.closeModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \" Cancel \")))));\n  }\n\n  render() {\n    const _this$state = this.state,\n          redirect = _this$state.redirect,\n          modalIsOpen = _this$state.modalIsOpen;\n\n    if (redirect) {\n      // return <Lntframe />;\n      return React.createElement(AddUserForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, modalIsOpen ? this.renderEditModel() : null, React.createElement(\"table\", {\n      id: \"students\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"EMAIL\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Mobile NO\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"NAME\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"PASSWORD\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"EDIT\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"DELETE\")), this.renderTableData())));\n  }\n\n}\n\nexport default UserList;","map":{"version":3,"sources":["/home/pragnesh/Smis/DemoExample/LNT/my-app/src/UserList.js"],"names":["React","Component","firebase","AddUserForm","Modal","newState","childKey","secondxyz","word","useridword","demoarray","customStyles","content","top","left","right","bottom","marginRight","transform","UserList","constructor","props","handleDelete","e","user","deleteUser","database","ref","userkey","remove","handleAdduser","setState","redirect","state","userList","modalIsOpen","confirm","currentObj","bind","componentDidMount","loadUserList","tableName","on","_snapshot","val","UserArray","key","push","handleEdit","handleUserUpdate","email","mobileno","name","edit","update","handleInputChange","field","value","closeModal","renderTableData","map","index","password","openModal","confirmModel","renderEditModel","target","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Userlist.css';\nimport * as firebase from 'firebase';\nimport AddUserForm from './AddUserForm';\nimport Modal from 'react-modal';\n\nlet newState = [];\nlet childKey ;\nlet secondxyz;\nlet word;\nlet useridword;\n\nvar demoarray = [];\n// var base64Img = require('base64-img');\n\nconst customStyles = {\n  content : {\n    top                   : '50%',\n    left                  : '50%',\n    right                 : 'auto',\n    bottom                : 'auto',\n    marginRight           : '-50%',\n    transform             : 'translate(-50%, -50%)'\n  }\n};\nclass UserList extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            redirect: false,\n            userList:[],\n            modalIsOpen: false,\n            confirm:false,\n            currentObj:{}\n        }\n        this.handleDelete = this.handleDelete.bind(this);\n    }\n\n    componentDidMount () {\n        this.loadUserList();     \n    }\n\n    async loadUserList(){\n        let tableName = firebase.database().ref('/');\n        tableName.on('value', async (_snapshot) => {\n            if(_snapshot.val()){\n                let userList=_snapshot.val();\n                let UserArray=[];\n                for (let key in userList){\n                    userList[key].userkey=key;\n                    UserArray.push(userList[key]);\n                }\n                await this.setState({\n                    userList: UserArray\n                }); \n            }\n        });\n    }\n    handleDelete = (e,user) => {\n        let deleteUser = firebase.database().ref('/'+user.userkey);\n        deleteUser.remove();\n    }\n    handleEdit(e,user){\n        this.setState({\n            modalIsOpen: true,\n            currentObj:user\n        })\n    }\n    handleUserUpdate(){\n        \n        const { email, mobileno, name, userkey} = this.state.currentObj ;\n        let edit ={\n          name:name,\n          email:email,\n          mobileno:mobileno\n        }\n        let ref = firebase.database().ref('/'+ userkey);\n        ref.update(edit);\n        this.setState({\n            modalIsOpen: false,\n            currentObj:{}\n        })\n    }\n    handleInputChange(field,value){\n        let currentObj= this.state.currentObj;\n        currentObj[field] = value;\n        this.setState({\n            currentObj:currentObj\n        })\n    }\n\n    closeModal() {\n        this.setState({\n            modalIsOpen: false,\n            currentObj:{}\n        })\n    }\n    renderTableData() {\n        return this.state.userList.map((word,index) => {\n            const { email, mobileno, name, password} = word \n            return (\n                <tr >\n                <td>{email}</td>\n                <td>{mobileno}</td>\n                <td>{name}</td>\n                <td>{password}</td>\n                <td><button onClick={(e)=>this.handleEdit(e,word)}>Edit</button></td>\n                <td><button onClick={(e)=>this.handleDelete(e,word)}>Delete</button></td>\n                </tr>\n            )\n        });\n    }\n\n    handleAdduser = () => {\n        this.setState({\n            redirect: true\n        })\n    }\n\n    openModal() {\n        this.setState({modalIsOpen: true});\n    }\n \n    confirmModel(){\n\n    }\n    renderEditModel(){\n        const { currentObj } = this.state\n        return(<Modal\n          isOpen={this.state.modalIsOpen}\n          onRequestClose={()=>this.closeModal()}\n          style={customStyles}\n        >\n \n            <h2 >Update User</h2>\n            <form className=\"projects fbca fbca--dircol fbca--flst\">\n                <div className=\"inputrow fbca\">\n                    <label className=\"inputrow__description\" htmlFor=\"name\">Name</label>\n                    <input\n                        id=\"name\" type=\"text\" className=\"inputrow__field\" name=\"name\"\n                        value={currentObj.name}  \n                        onChange={(e)=>this.handleInputChange('name',e.target.value)}\n                    />\n                </div>\n                <div className=\"inputrow fbca\">\n                    <label className=\"inputrow__description\" htmlFor=\"email\">Email</label>\n                    <input\n                        id=\"email\" type=\"text\" className=\"inputrow__field\" name=\"email\" \n                        value={currentObj.email} \n                        onChange={(e)=>this.handleInputChange('email',e.target.value)} \n                    />\n                </div>\n\n                \n                <div className=\"inputrow fbca\">\n                    <label className=\"inputrow__description\" htmlFor=\"mobileno\">Mobile No</label>\n                    <input\n                        id=\"mobileno\" type=\"number\" className=\"inputrow__field\" name=\"mobileno\"\n                        value={currentObj.mobileno}\n                        onChange={(e)=>this.handleInputChange('mobileno',e.target.value)}\n                    />\n                </div>\n                <div className=\"btn-group-submit\">\n                    <div >\n                        <button className=\"button\" onClick={(e)=>this.handleUserUpdate()}> Save </button>\n                        <button className=\"button\" onClick={(e)=>this.closeModal()}> Cancel </button>\n                    </div>\n                </div>                \n            </form>\n        </Modal>);\n    }\n    render () {\n        const { redirect,modalIsOpen } = this.state;\n        if (redirect) {\n            // return <Lntframe />;\n            return <AddUserForm />;\n        }\n      \n        return (\n            \n            <div>\n                {/* <div>\n                <button className=\"button\" onClick={this.handleAdduser}>Add User</button>\n                </div> */}\n\n                { modalIsOpen ? this.renderEditModel() :null}\n                <table id='students'>\n                    <tbody>\n                        <tr>\n                            <th>EMAIL</th>\n                            <th>Mobile NO</th>\n                            <th>NAME</th>\n                            <th>PASSWORD</th>\n                            <th>EDIT</th>\n                            <th>DELETE</th>\n                            {/* <th>DATE</th> */}\n                        </tr>\n                        {this.renderTableData()}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n    \nexport default UserList;"]},"metadata":{},"sourceType":"module"}