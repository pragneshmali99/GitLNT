{"ast":null,"code":"var _jsxFileName = \"/home/pragnesh/Smis/DemoExample/LNT/my-app/src/UserList.js\";\nimport React, { Component } from 'react';\nimport './Userlist.css';\nimport * as firebase from 'firebase';\nlet newState = [];\nlet secondxyz;\nlet word; // var base64Img = require('base64-img');\n\nclass UserList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      secondxyz: [],\n      newState: []\n    };\n  }\n\n  renderTableData() {\n    return this.state.secondxyz.map((word, index) => {\n      const email = word.email,\n            mobileno = word.mobileno,\n            name = word.name,\n            password = word.password;\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, email), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, mobileno), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, password));\n    });\n  }\n\n  renderTableHeader() {\n    let header = Object.keys(this.state.secondxyz[0]);\n    return header.map((key, index) => {\n      return React.createElement(\"th\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, key.toUpperCase());\n    });\n  }\n\n  componentDidMount() {\n    const xyz = firebase.database().ref('/');\n    xyz.on('value', snapshot => {\n      secondxyz = snapshot.val();\n      console.log(\"secondxyz :: \", secondxyz);\n\n      for (word in secondxyz) {\n        newState.push({\n          email: secondxyz[word].email,\n          mobileno: secondxyz[word].mobileno,\n          name: secondxyz[word].name,\n          password: secondxyz[word].password\n        });\n      }\n\n      this.setState({\n        secondxyz: newState\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      id: \"students\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"EMAIL\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Mobile NO\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"NAME\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"PASSWORD\")), this.renderTableData())));\n  }\n\n}\n\nexport default UserList;","map":{"version":3,"sources":["/home/pragnesh/Smis/DemoExample/LNT/my-app/src/UserList.js"],"names":["React","Component","firebase","newState","secondxyz","word","UserList","constructor","props","state","renderTableData","map","index","email","mobileno","name","password","renderTableHeader","header","Object","keys","key","toUpperCase","componentDidMount","xyz","database","ref","on","snapshot","val","console","log","push","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AAEA,IAAIC,QAAQ,GAAG,EAAf;AACA,IAAIC,SAAJ;AACA,IAAIC,IAAJ,C,CACA;;AAEA,MAAMC,QAAN,SAAuBN,KAAK,CAACC,SAA7B,CAAuC;AAEnCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTL,MAAAA,SAAS,EAAG,EADH;AAETD,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAIH;;AAEDO,EAAAA,eAAe,GAAG;AAEd,WAAO,KAAKD,KAAL,CAAWL,SAAX,CAAqBO,GAArB,CAAyB,CAACN,IAAD,EAAMO,KAAN,KAAgB;AAAA,YACpCC,KADoC,GACAR,IADA,CACpCQ,KADoC;AAAA,YAC7BC,QAD6B,GACAT,IADA,CAC7BS,QAD6B;AAAA,YACnBC,IADmB,GACAV,IADA,CACnBU,IADmB;AAAA,YACbC,QADa,GACAX,IADA,CACbW,QADa;AAE5C,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKH,KAAL,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKC,QAAL,CAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKC,IAAL,CAHA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKC,QAAL,CAJA,CADJ;AAQH,KAVM,CAAP;AAWF;;AAEFC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKX,KAAL,CAAWL,SAAX,CAAqB,CAArB,CAAZ,CAAb;AACA,WAAOc,MAAM,CAACP,GAAP,CAAW,CAACU,GAAD,EAAMT,KAAN,KAAgB;AAC/B,aAAO;AAAI,QAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiBS,GAAG,CAACC,WAAJ,EAAjB,CAAP;AACF,KAFM,CAAP;AAGH;;AAEDC,EAAAA,iBAAiB,GAAI;AACjB,UAAMC,GAAG,GAAGtB,QAAQ,CAACuB,QAAT,GAAoBC,GAApB,CAAwB,GAAxB,CAAZ;AACAF,IAAAA,GAAG,CAACG,EAAJ,CAAO,OAAP,EAAgBC,QAAD,IAAc;AACzBxB,MAAAA,SAAS,GAAGwB,QAAQ,CAACC,GAAT,EAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B3B,SAA7B;;AAGA,WAAKC,IAAL,IAAaD,SAAb,EAAuB;AACnBD,QAAAA,QAAQ,CAAC6B,IAAT,CAAc;AACVnB,UAAAA,KAAK,EAAGT,SAAS,CAACC,IAAD,CAAT,CAAgBQ,KADd;AAEVC,UAAAA,QAAQ,EAAGV,SAAS,CAACC,IAAD,CAAT,CAAgBS,QAFjB;AAGVC,UAAAA,IAAI,EAAGX,SAAS,CAACC,IAAD,CAAT,CAAgBU,IAHb;AAIVC,UAAAA,QAAQ,EAAGZ,SAAS,CAACC,IAAD,CAAT,CAAgBW;AAJjB,SAAd;AAMH;;AACD,WAAKiB,QAAL,CAAc;AACV7B,QAAAA,SAAS,EAAED;AADD,OAAd;AAGH,KAhBD;AAiBH;;AAED+B,EAAAA,MAAM,GAAI;AAER,WAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,EAAE,EAAC,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,CADH,EASI,KAAKxB,eAAL,EATJ,CADH,CADJ,CAFF;AAmBD;;AA1EkC;;AA6EvC,eAAeJ,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Userlist.css';\nimport * as firebase from 'firebase';\n\nlet newState = [];\nlet secondxyz;\nlet word;\n// var base64Img = require('base64-img');\n\nclass UserList extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            secondxyz : [] ,\n            newState: [],\n        }\n    }\n\n    renderTableData() {\n\n        return this.state.secondxyz.map((word,index) => {\n            const { email, mobileno, name, password } = word \n            return (\n                <tr >\n                <td>{email}</td>\n                <td>{mobileno}</td>\n                <td>{name}</td>\n                <td>{password}</td>\n                </tr>\n            )\n        });\n     }\n\n    renderTableHeader() {\n        let header = Object.keys(this.state.secondxyz[0])\n        return header.map((key, index) => {\n           return <th key={index}>{key.toUpperCase()}</th>\n        })\n    }\n\n    componentDidMount () {\n        const xyz = firebase.database().ref('/');\n        xyz.on('value',(snapshot) => {\n            secondxyz = snapshot.val();\n            console.log(\"secondxyz :: \", secondxyz);\n            \n\n            for (word in secondxyz){\n                newState.push({\n                    email : secondxyz[word].email,\n                    mobileno : secondxyz[word].mobileno,\n                    name : secondxyz[word].name,\n                    password : secondxyz[word].password\n                });\n            }\n            this.setState({\n                secondxyz: newState\n            });  \n        })\n    }\n\n    render () {\n      \n      return (\n          \n        <div>\n            <table id='students'>\n               <tbody>\n                  <tr>\n                      <th>EMAIL</th>\n                      <th>Mobile NO</th>\n                      <th>NAME</th>\n                      <th>PASSWORD</th>\n                      {/* <th>DATE</th> */}\n                  </tr>\n                  \n                  {this.renderTableData()}\n               </tbody>\n            </table>\n         </div>\n        \n      );\n    }\n    }\n    \nexport default UserList;"]},"metadata":{},"sourceType":"module"}